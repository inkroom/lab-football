package cn.nsu.edu.web.four.controllers.schedule;

import cn.nsu.edu.web.four.beans.schedule.CurrentTeam;
import cn.nsu.edu.web.four.beans.schedule.Memchanism;
import cn.nsu.edu.web.four.beans.schedule.Schedule;
import cn.nsu.edu.web.four.dto.ctv.MessageDto;
import cn.nsu.edu.web.four.enums.Result;
import cn.nsu.edu.web.four.services.match.MatchService;
import cn.nsu.edu.web.four.services.schedule.impl.ScheduleServiceImpl;
import cn.nsu.edu.web.four.utils.Page;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;
import java.util.HashMap;
import java.util.List;


/**
 * Created by 灵魂都在冒香气的神 on 2018/3/19.
 */
@Controller
@RequestMapping("/schedule")
public class ScheduleController
{
    @Resource(name = "schedule")
    private ScheduleServiceImpl service;
    @Autowired
    private MatchService matchService;

    /*
            新增赛程
     */
    @ResponseBody
    @RequestMapping(value = "/create",method = RequestMethod.POST,produces = "application/json;charset=utf-8")
    public MessageDto create(@RequestBody Schedule schedule)
    {
        if (schedule!=null)
        {
            Integer level=matchService.getLevel(schedule.getMatchId());
            schedule.setLevel(level);
            if (service.createSchedule(schedule))
            {
                return new MessageDto(Result.SUCCESS);
            }
        }
        return new MessageDto(Result.EXCEPTION);
    }

    /*
            获取机构列表
     */
    @ResponseBody
    @RequestMapping(value = "/showMechanism",method = RequestMethod.GET,produces = "application/json;charset=utf-8")
    public MessageDto showMechanism()
    {
        List<Memchanism> list=service.getMemchanism();
        if (list==null)
        {
            return  new MessageDto(Result.EXCEPTION);
        }
        HashMap map=new HashMap();
        MessageDto dto=new MessageDto(Result.SUCCESS);
        dto.put("org",list);
        return dto;
    }

    /*
            根据机构列表获取获取队伍列表
     */
    @ResponseBody
    @RequestMapping(value = "/team",method = RequestMethod.GET,produces = "application/json;charset=utf-8")
    public MessageDto showTeam(@RequestParam(name = "orgId",defaultValue = "-1") Integer orgId)
    {
        if (orgId ==-1)
        {
            return new MessageDto(Result.EXCEPTION);
        }
        List<CurrentTeam> list=service.getTeam(orgId);
        if (list==null)
        {
            return new MessageDto(Result.EXCEPTION);
        }
        MessageDto dto=new MessageDto(Result.SUCCESS);
        dto.put("team",list);
        return dto;
    }


    /*
            根据ID修改赛程
     */
    @ResponseBody
    @RequestMapping(value = "/modify",method = RequestMethod.POST,produces = "application/json;charset=utf-8")
    public MessageDto modify(@RequestBody Schedule schedule)
    {
        if (schedule==null||(!service.modifySchedule(schedule)))
        {
            return new MessageDto(Result.EXCEPTION);
        }
        return new MessageDto(Result.SUCCESS);
    }


    /*
            根据ID删除赛程
     */
    @ResponseBody
    @RequestMapping(value = "/delete",method = RequestMethod.POST,produces = "application/json;charset=utf-8")
    public MessageDto delete(@RequestParam(name = "idSchedule",defaultValue = "-1")Integer idSchedule)
    {
        if (idSchedule==-1||(!service.deleteSchedule(idSchedule)))
        {
            return new MessageDto(Result.EXCEPTION);
        }
        return new MessageDto(Result.SUCCESS);
    }

    /*
            根据赛事ID获取获取赛程列表
     */
    @ResponseBody
    @RequestMapping(value = "/showSchedule/{page}",method = RequestMethod.POST,produces = "application/json;charset=utf-8")
    public MessageDto showSchedule(@RequestParam(name = "idMatch",defaultValue = "-1")Integer idMatch,@PathVariable Integer page)
    {
        if (idMatch==-1)
        {
            return new MessageDto(Result.EXCEPTION);
        }
        List<Schedule> list=service.getScheduleByMatchID(idMatch);
        if (list==null)
        {
            return new MessageDto(Result.EXCEPTION);
        }
        List<Schedule> childList=new Page<Schedule>().subList(list,page);
        MessageDto dto=new MessageDto();
        dto.put("schedule",childList);
        dto.put("size",list.size());   //赛程总数目
        return dto;
    }
}

