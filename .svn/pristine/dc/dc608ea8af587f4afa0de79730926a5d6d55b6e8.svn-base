package cn.nsu.edu.web.four.services.common;

import cn.nsu.edu.web.four.annotation.FileRename;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import java.io.File;
import java.io.IOException;

@Service
public class UploadService {

    @Value("${upload.image.max.size}")
    private long maxSize;
    @Value("${upload.image.min.size}")
    private long minSize;
    @Value("${upload.image.max.width}")
    private int maxWidth;
    @Value("${upload.image.min.width}")
    private int minWidth;
    @Value("${upload.image.max.height}")
    private int maxHeight;
    @Value("${upload.image.min.height}")
    private int minHeight;
    @Value("${upload.image.typ}")
    private String allowType;
    @Value("${upload.image.base.path}")
    private String path;

    private String message;


    public String getMessage() {
        return message;
    }

    private boolean checkFileSize(MultipartFile file) {
        return file.getSize() < minSize || file.getSize() > maxSize;
    }

    private boolean checkFileType(MultipartFile file, HttpServletRequest request) {
        return !(request.getHeader("content-type").equals("image/jpeg"));
    }

    public File upload(MultipartFile file, HttpServletRequest request, FileRename rename) {
        if (checkFileSize(file)) {
            message = "请上传大小在" + minSize + "到" + maxSize + "之间的文件";
            return null;
        }
        if (checkFileType(file, request)) {
            message = "请上传jpeg、png格式文件";
            return null;
        }
        String fileName = path + File.separator + rename.rename(file, request);
        File target = new File(fileName);
        if (!target.getParentFile().exists())
            target.getParentFile().mkdirs();

        try {
            file.transferTo(target);
            return target;
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }

    public File upload(MultipartFile file,HttpServletRequest request){
        return upload(file,request, (file1, request1) -> System.currentTimeMillis() + ".jpeg");
    }
}
