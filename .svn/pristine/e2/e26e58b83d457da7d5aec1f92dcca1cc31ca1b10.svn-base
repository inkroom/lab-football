<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.nsu.edu.web.four.daos.jdbc.match.MatchDao">

    <resultMap id="MatchResultMap" type="cn.nsu.edu.web.four.beans.match.Match">
    <id column="id_match" jdbcType="INTEGER" property="idMatch" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="start_date" jdbcType="DATE" property="startDate" />
    <result column="end_date" jdbcType="DATE" property="endDate" />
    <result column="num_player" jdbcType="INTEGER" property="numPlayer" />
    <result column="apply_deadline" jdbcType="TIMESTAMP" property="applyDeadline" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <association property="orgStaff" javaType="cn.nsu.edu.web.four.beans.match.Staff">
    <id column="id_org" property="id"/>
      <result column="oname" property="name"/>
    </association>
  </resultMap>
  <resultMap id="ExamineMap" type="cn.nsu.edu.web.four.beans.match.MatchExamine">
    <result column="org_id" jdbcType="INTEGER" property="orgId"/>
    <result column="org_name" jdbcType="VARCHAR" property="orgName"/>
      <collection property="teamName" ofType="java.lang.String">
          <result column="team_name" jdbcType="VARCHAR"/>
    </collection>
  </resultMap>
  <resultMap id="PlayerMap" type="cn.nsu.edu.web.four.beans.match.MatchPlayer">
    <result column="id_team" jdbcType="INTEGER" property="teamId"/>
    <result column="player_name" jdbcType="VARCHAR" property="playerName"/>
    <result column="id_player" jdbcType="INTEGER" property="playerId"/>
    <result column="team_name" jdbcType="VARCHAR" property="teamName"/>
    <result column="org_id" jdbcType="INTEGER" property="orgId"/>
  </resultMap>
  <sql id="Base_Column_List">
      m.id_match, m.name, m.start_date, m.end_date, m.num_player, m.apply_deadline, m.level, m.status,o.id_org,o.name
  </sql>
    <sql id="Match_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
  <select id="selectById" parameterType="java.lang.Integer" resultMap="MatchResultMap">
    select 
    <include refid="Base_Column_List" />
    from `Match` m , Organization o
      where id_match = #{idMatch,jdbcType=INTEGER} AND m.org_id = o.id_org LIMIT 1 ;
  </select>

  <delete id="deleteById" parameterType="java.lang.Integer">
      delete from `Match`
    where id_match = #{idMatch,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.nsu.edu.web.four.beans.match.Match">
    insert into `Match`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idMatch != null">
        id_match,
      </if>
        org_id,
        `name`,
        start_date,
      <if test="endDate != null">
        end_date,
      </if>
        num_player,
        apply_deadline,
        `level`,
        status,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idMatch != null">
        #{idMatch,jdbcType=INTEGER},
      </if>
        #{orgStaff.id,jdbcType=INTEGER},
        #{name,jdbcType=VARCHAR},
        #{startDate,jdbcType=DATE},
      <if test="endDate != null">
        #{endDate,jdbcType=DATE},
      </if>
        #{numPlayer,jdbcType=INTEGER},
        #{applyDeadline,jdbcType=TIMESTAMP},
        #{level,jdbcType=INTEGER},
        #{status,jdbcType=INTEGER},
    </trim>
  </insert>
    <update id="updateById" parameterType="cn.nsu.edu.web.four.beans.match.Match">
        update `Match`
    <set>
      <if test="name != null">
          `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="numPlayer != null">
        num_player = #{numPlayer,jdbcType=INTEGER},
      </if>
      <if test="applyDeadline != null">
        apply_deadline = #{applyDeadline,jdbcType=TIMESTAMP},
      </if>
      <if test="level != null">
          `level` = #{level,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id_match = #{idMatch,jdbcType=INTEGER}
  </update>

    <select id="selectByIdWithOrg" parameterType="int" resultType="cn.nsu.edu.web.four.beans.match.Match">
        SELECT m.id_match,m.apply_deadline, m.`name`,m.start_date
        FROM `Match` m , Organization o
        WHERE m.org_id=#{VALUE}
        AND m.org_id=o.id_org
</select>
  <select id="selectByStaffOther" parameterType="int" resultType="cn.nsu.edu.web.four.beans.match.Match">
      SELECT DISTINCT m.id_match,m.apply_deadline,m.`name`,m.start_date
      FROM M_Match_Staff s
    ,`Match` m ,Organization o
    WHERE s.org_id=#{VALUE}
    AND s.match_id!=m.id_match
    AND m.org_id=o.id_org
  </select>
  <select id="selectByStaff" parameterType="int" resultType="cn.nsu.edu.web.four.beans.match.Match">
      SELECT DISTINCT m.id_match,m.apply_deadline,m.`name`,m.start_date ,s.status AS exstatus
    FROM M_Match_Staff s ,`Match` m ,Organization o
    WHERE s.org_id=#{VALUE}
    AND s.match_id=m.id_match
    AND m.org_id=o.id_org
  </select>
  <select id="selectPlayerByOrgId" parameterType="int" resultMap="PlayerMap">
    SELECT t.id_team,p.`name` as player_name ,p.id_player,t.`name` as team_name,t.org_id FROM Team t, M_Team_Player mt, Player p
    WHERE t.org_id=#{VALUE } AND t.id_team=mt.team_id AND p.id_player=mt.player_id
  </select>
  <select id="listTeamIdByorgId" resultType="map" >
    SELECT id_team ,`name` FROM Team WHERE org_id=#{VALUE }
  </select>
  <insert id="insertPlayer" parameterType="java.util.List" >
    INSERT  INTO M_Match_Staff (match_id,org_id,team_id,player_id,status)
    VALUES
    <foreach collection="list" item="item" index="idex" separator="," >
     (#{item.matchId,jdbcType=INTEGER},#{item.orgId,jdbcType=INTEGER},#{item.teamId,jdbcType=INTEGER},#{item.playerId,jdbcType=INTEGER},#{item.status,jdbcType=INTEGER})
    </foreach>
  </insert>
    <select id="selectExaminePlayer" parameterType="int" resultType="cn.nsu.edu.web.four.beans.match.MatchPlayer">
      SELECT t.`name` as team_name ,p.`name` as player_name
      FROM `M_Match_Staff` ms,Team t,Player p
      WHERE ms.org_id=#{VALUE }
      AND ms.team_id=t.id_team
      AND ms.player_id=p.id_player
      AND ms.`status`=0
  </select>
    <select id="selectExamineOrg" parameterType="int" resultMap="ExamineMap">
        SELECT ms.org_id,o.`name` as org_name ,t.`name` as team_name
        FROM `M_Match_Staff` ms ,Organization o,Team t
        WHERE match_id=#{VALUE }
        AND ms.org_id=o.id_org
        AND ms.team_id=t.id_team
        AND ms.`status`=0
        GROUP BY t.id_team
    </select>
  <select id="getLevel" parameterType="int" resultType="int">
    SELECT `level` FROM `Match` WHERE id_match=#{VALUE}
  </select>
    <update id="updateStaffStatus" parameterType="int">
        UPDATE
        M_Match_Staff
        SET status=#{status} WHERE org_id=#{orgid}
  </update>

    <select id="getOrgIdByMatch" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT org_id FROM
        M_Match_Staff
        WHERE match_id=#{matchID,jdbcType=INTEGER}
    </select>

    <resultMap id="OrganizationMap" type="cn.nsu.edu.web.four.beans.organization.Organization">
        <result column="org_id" jdbcType="INTEGER" property="idOrg"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
    </resultMap>

    <select id="selectMatchStaffOrgsByMatchId" parameterType="java.lang.Integer"
            resultMap="OrganizationMap">
        SELECT DISTINCT m.org_id,o.name FROM `M_Match_Staff` m ,Organization o
        where match_id = #{matchId,jdbcType=INTEGER} AND m.org_id = o.id_org AND m.status = 1
    </select>

    <select id="countByMatchName" parameterType="cn.nsu.edu.web.four.beans.match.MatchExample" resultType="int">
        select count(*) from `Match`
        <if test="_parameter != null">
            <include refid="Match_Where_Clause"/>
        </if>
    </select>

    <resultMap id="TeamMap" type="cn.nsu.edu.web.four.beans.teams.Team">
        <result column="team_id" jdbcType="INTEGER" property="idTeam"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
    </resultMap>

    <select id="selectMatchStaffTeamsByMatchOrgId" resultMap="TeamMap">
        SELECT DISTINCT m.team_id,t.name FROM `M_Match_Staff` m ,Team t
        WHERE m.match_id = #{matchId,jdbcType=INTEGER} AND m.org_id =#{orgId,jdbcType=INTEGER} AND t.id_team = m.team_id
        AND m.status = 1
    </select>
</mapper>