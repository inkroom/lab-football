package cn.nsu.edu.web.four.services.schedule.impl;


import cn.nsu.edu.web.four.beans.schedule.Schedule;
import cn.nsu.edu.web.four.daos.jdbc.match.MatchDao;
import cn.nsu.edu.web.four.daos.jdbc.schedule.CurrentTeamDao;
import cn.nsu.edu.web.four.daos.jdbc.schedule.ScheduleDao;
import cn.nsu.edu.web.four.services.schedule.ScheduleService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * @author 灵魂都在冒香气的神
 * @date 2018/3/20.
 */
@Service(value = "schedule")
public class ScheduleServiceImpl implements ScheduleService
{
    @Autowired
    private ScheduleDao schMapper;
    @Autowired
    private MatchDao matchDao;
    @Autowired
    private CurrentTeamDao teamMapper;



    @Override
    public Boolean createSchedule(Schedule schedule)    //创建赛程
    {
        try
        {
            return schMapper.insertSelective(schedule)!=0;
        }
        catch (Exception e)
        {
            return false;
        }
    }

//    @Override
//    public List<Memchanism> getMemchanism()    //获取机构列表
//    {
//        try
//        {
//            List<Memchanism> list= mechMapper.getMechanismList();
//            return list.size()!=0?list:null;
//        }
//        catch (Exception e)
//        {
//            return null;
//        }
//    }

//    @Override
//    public List<CurrentTeam> getTeam(Integer orgId)    //获取机构所在队伍列表
//    {
//        List list=teamMapper.getTeamByOrg(orgId);
//        return list.size()!=0?list:null;
//    }

    @Override
    public Boolean modifySchedule(Schedule schedule)     //修改赛程
    {
        try
        {
            return schMapper.updateByIdSelective(schedule)!=0;
        }
        catch (Exception se)
        {
            return false;
        }
    }
    @Override
    public Boolean deleteSchedule(Integer idSchedule)   //删除赛程
    {
        try
        {
            return schMapper.deleteById(idSchedule)!=0;
        }
        catch (Exception se)
        {
            return false;
        }
    }
    @Override
    public
    List<Schedule> getScheduleByMatchID(Integer idMatch)    //根据赛事ID获取赛程列表
    {
        try
        {
            List<Schedule> list= schMapper.selectByMatchID(idMatch);
            return list.size()!=0?list:null;
        }
        catch (Exception se)
        {
            return null;
        }
    }

    @Override
    public Schedule getScheduleInfoById(Integer schId) {
        try {
            return schMapper.selectById(schId);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return  null;
    }

    @Override
    public Integer getOrgIdByMatch(Integer matchId)
    {
        try
        {
            return matchDao.getOrgIdByMatch(matchId);
        }
        catch (Exception e)
        {
            return null;
        }
    }
}
