package cn.nsu.edu.web.four.controllers.match;

import cn.nsu.edu.web.four.beans.match.Match;
import cn.nsu.edu.web.four.beans.match.ModelList;
import cn.nsu.edu.web.four.dto.ctv.MessageDto;
import cn.nsu.edu.web.four.enums.Result;
import cn.nsu.edu.web.four.services.match.MatchService;
import cn.nsu.edu.web.four.utils.time.TimeJudge;
import com.github.pagehelper.Page;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.List;
import java.util.Map;

/**
 * @author 痞老板
 * @Project: four
 * @Package:cn.nsu.edu.web.four.controllers.match
 * @date 2018/3/20 11:25
 * @description
 **/
@Controller
@RequestMapping(value = "match")
public class MatchListController {
    @Autowired
    MatchService service;

    /*
     *@author 痞老板
     *@description
     *@param [num]
     *@return cn.nsu.edu.web.four.dto.ctv.MessageDto
     *@date 2018/3/22 10:37
     */
    @ResponseBody
    @RequestMapping(value = "1")
    public MessageDto listMatch(@RequestParam(required = false,defaultValue = "1",value = "pn")Integer pn ,
                                @RequestParam(required = false,defaultValue = "1",value = "pn")Integer num){
        List<Match> list;
        PageHelper.startPage(pn,10);
        switch (num){
            case 1:   list=service.selectByStaffOther(1);break;
            case 2:   list=service.selectByIdWithOrg(1);break;
            case 3:   list=service.selectByStaff(1);
            default: list=null;
        }
        PageInfo pageInfo=new PageInfo(list,5);
        MessageDto dto;
        if (list==null&&list.isEmpty()){
            return  new MessageDto(Result.FAIL);
        }

        Page<Match> pages=(Page<Match>) pageInfo.getList();
        for (Match match:pages){
            if (TimeJudge.compareTime(match.getEndDate())){
                match.setStatus(2);
            }
            else if (TimeJudge.compareTime(match.getStartDate())){
                match.setStatus(1);
            }
        }
        dto=new MessageDto(Result.SUCCESS);
        dto.put("matchList",pages);
        return dto;
    }
    @RequestMapping(value = "2")
    public String listTeamAndPlayer(Map<String,Object> map){
        map.put("teamList",service.listTeamAndPlayer(1));
        return "";
    }

    @RequestMapping(value = "3")
    public String insertPlayer(ModelList model){
        service.insertPlayer(model.getPlayers());
        return "";
    }
    @RequestMapping(value = "4")
    public String listExamine(@PathVariable("id") Integer match_id ,Map<String,Object> map){
        map.put("listExamine",service.listExamine(match_id));
        return "";
    }
    @RequestMapping(value = "5")
    public MessageDto examineSet(@PathVariable("id")Integer org_id){
        service.updateStatus(org_id);
        return new MessageDto(Result.SUCCESS);
    }
    @RequestMapping(value = "6")
    public String insertMatch(Match match){
        service.insertMatch(match);
        return "";
    }



}
