package cn.nsu.edu.web.four.services.team.Impl;

import cn.nsu.edu.web.four.beans.coach.Coach;
import cn.nsu.edu.web.four.beans.player.Player;
import cn.nsu.edu.web.four.beans.teams.Team;
import cn.nsu.edu.web.four.daos.jdbc.team.FindInfoDao;
import cn.nsu.edu.web.four.services.team.FindInfoService;
import org.springframework.beans.factory.annotation.Autowired;

import javax.annotation.Resource;
import java.util.List;

@Resource
public class FindInfoServiceImpl implements FindInfoService {

    @Autowired
    private FindInfoDao findInfoDao;

    //球队教练信息查询

    @Override
    public void findTeamIdByCoachid(int id_player, int status) {

        try {
              findInfoDao.findTeamByCoachid(id_player,status);
        }catch (Exception e){
            e.printStackTrace();
            throw new RuntimeException(e);
        }

    }

    @Override
    public void findCoachJoinTeamTime(int id_player, int status) {

        try {
            findInfoDao.findCoachJoinTeamTime(id_player,status);
        }catch (Exception e){
            e.printStackTrace();
            throw new RuntimeException(e);
        }

    }

    @Override
    public void findCoachOutTeamTime(int id_player, int status) {

        try {
            findInfoDao.findCoachOutTeamTime(id_player,status);
        }catch (Exception e){
            e.printStackTrace();
            throw new RuntimeException(e);
        }

    }

    //球队球员信息查询

    @Override
    public void findTeamIdByPlayerid(int id_coach, int status) {

        try {
            findInfoDao.findTeamByPlayerid(id_coach,status);
        }catch (Exception e){
            e.printStackTrace();
            throw new RuntimeException(e);
        }

    }

    @Override
    public void findPlayerJoinTeamTime(int id_coach, int status) {

        try {
            findInfoDao.findPlayerJoinTeamTime(id_coach,status);
        }catch (Exception e){
            e.printStackTrace();
            throw new RuntimeException(e);
        }

    }

    @Override
    public void findPlayerOutTeamTime(int id_coach, int status) {

        try {
            findInfoDao.findPlayerOutTeamTime(id_coach,status);
        }catch (Exception e){
            e.printStackTrace();
            throw new RuntimeException(e);
        }

    }


    //球队

    @Override
    public List<Player> findSameOrgAllPlayer(int org_id, int status)  {

        try {
            return  findInfoDao.findSameOrgAllPlayer(org_id,status);
        }catch (Exception e){
            e.printStackTrace();
            throw new RuntimeException(e);
        }

    }

    @Override
    public List<Coach> findSameOrgAllCoach(int org_id, int status)  {

        try {
            return  findInfoDao.findSameOrgAllCoach(org_id,status);
        }catch (Exception e){
            e.printStackTrace();
            throw new RuntimeException(e);
        }
    }

    @Override
    public List<Team> findSameOrgAllTeam(int org_id, int status)  {

        try {
            return  findInfoDao.findSameOrgAllTeam(org_id,status);
        }catch (Exception e){
            e.printStackTrace();
            throw new RuntimeException(e);
        }
    }

    @Override
    public Team findTeamInfo(int id_team)  {

        try {
            return  findInfoDao.findTeamInfo(id_team);
        }catch (Exception e){
            e.printStackTrace();
            throw new RuntimeException(e);
        }
    }
}
